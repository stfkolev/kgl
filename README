-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

                    Kolev Graph Library - KGL

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-

  PLEASE READ THE FILE 'COPYING' BEFORE APPLYING AND USING THIS SOFTWARE

-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-


ABOUT KGL

   KGL, the "Kolev Graph Library", can be seen as an
   extension of the Standard Template Library STL to graphs and
   fundamental graph algorithms.

   Graphs are a common model for discrete relational structures,
   such as diagrams, nets and networks, hierarchies, plans,
   charts, or maps. And there are many important algorithms for
   graphs, such us exhaustive search, shortest path, minimum
   spanning tree, matching or network flow, with a wide range of
   applications in areas such as Computer Science, Discrete
   Mathematics, Chemistry, Molecular Biology, Operations
   Research, Engineering, Computer Aided Design, Project
   Management, Production Planning, Surveillance, and Maintenance
   Control, Cartography, and other application areas. The wide
   use of graphs is also due to the fact that they have a natural
   graphical representation and Graphlet is a tool for this.

   KGL is a platform independent and extendible C++ library. It
   is a useful aid to any software designer. KGL contains the
   classes needed to work with graphs, nodes and edges and some
   fundamental algorithms as building blocks for more complex
   graph algorithms.  Further algorithms are not finished.

   Customized algorithms can be developed by experienced
   programmers. A major step shall be support for models of
   hierachically structured graph and the efficient manipulation
   of really large graphs.

   KGL has been designed and programmed following the guide lines
   of STL.


WHAT IS KGL?

   There are some basic data structures and algorithms which are frequently
   used in many programs.  This includes container classes such as vectors,
   sets and lists.

   Many commercial but some free libraries have implemented these data
   structures and algorithms in a general way. This makes them usable for
   many puposes.

   One of these libraries is the Standard Template Library (STL), an
   extremely flexible implementation of many container classes and standard
   algorithms. STL is supposed to become a part of the C++ standard library
   and therefore is an ideal basis when writing portable programs.

   Unfortunately, STL has no support for graphs and graph algorithms.
   However, graphs are widely used to model complex relational structures.

   Since I had a coursework based on graphs, and was said to make it STL-like, I
   decided to implement KGL, a graph library based on STL. KGL contains the
   classes needed to work with graphs, nodes and edges and some basic
   algorithms as building blocks for more complex graph algorithms. Further
   algorithms are not finished.


VERSION:

   The most recent version is 1.0.3. 

   For the changes since the last release 1.0.2 please see the
   ChangeLog file.


PLATFORMS:

   Currently KGL is usable on the following platforms:
	
	* Solaris with gcc-5.x and above
	* Linux with gcc-5.x and above
	* MS Windows XP and above and Visual Studio .NET 2015 and above
	* Mac OS X 10.2, 10.3 and above 

AUTHORS:

   KGL was designed and implemented by

	Stf Kolev	<inkyzx@gmail.com>

BUGS AND FEATURES:

   If you want to report any bugs in KGL or you have suggestions
   concerning desirable feature. Please let me know by creating an issue!

   Always include the following informations in your bugreports:

	* Operating System / Version (+ Service Pack)
	* Compiler / Version (+ Service Pack)
	* KGL version
	* A detailed description of the bug
	* Any warnings or errors you get.
	* output of make
	* the file config.log
	* $20 :-)


